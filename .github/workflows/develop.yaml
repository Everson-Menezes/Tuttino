name: 2 - [Develop] Deploy to Development Environment

on:
  pull_request:
    types: [closed]
    branches: [develop]

jobs:
  validate-changes:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read

    outputs:
      backend_changed: ${{ steps.filter.outputs.backend }}
      infra_changed: ${{ steps.filter.outputs.infra }}

    steps:
      - name: 📥 Checkout source
        uses: actions/checkout@v4

      - name: 📂 Check changed paths
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            backend:
              - 'backend/**'
            infra:
              - 'infra/**'

  deploy-dev:
    needs:
      - validate-changes
    if: >
      github.event.pull_request.merged == true &&
      startsWith(github.event.pull_request.head.ref, 'feature/') &&
      (needs.validate-changes.outputs.infra_changed == 'true' || needs.validate-changes.outputs.backend_changed == 'true')
    runs-on: self-hosted
    env:
      ENVIRONMENT: dev
    steps:
      - name: 📥 Checkout source
        uses: actions/checkout@v4

      - name: 🧹 Cleanup old Docker containers and network
        run: |
          echo "Removing old containers if they exist..."
          docker rm -f tuttino-postgres-${{ env.ENVIRONMENT }} tuttino-backend-${{ env.ENVIRONMENT }} tuttino-nginx-${{ env.ENVIRONMENT }} || true
          echo "Removing old Docker network if it exists..."
          docker network rm tuttino-${{ env.ENVIRONMENT }}-net || true

      - name: 🧰 Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: ⚙️ Terraform Init
        run: terraform -chdir=infra init

      - name: 🚀 Terraform Apply
        run: terraform -chdir=infra apply -auto-approve